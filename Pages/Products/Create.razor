@page "/products/create"
@inject AppDbContext _context
@inject NavigationManager _navigateManager

<h1>New product</h1>

<EditForm Model = "_model" OnValidSubmit="@HandleSubmitAsync">
    
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    
    <div class="mb-3">
        <label fot="Title" class="form-label"></label>
        <InputText class="form-control"
                    type="text"
                    id="Title"
                    @bind-Value="_model.Title">
        </InputText>
    </div>

    <div class="mb-3">
        <label fot="Title" class="form-label"></label>
        <InputNumber class="form-control"
                   type="number"
                   id="Price"
        @bind-Value="_model.Price">
        </InputNumber>
    </div>

    <div class="mb-3">
        <label fot="CategoryId" class="form-label">Category</label>
        <InputSelect id="CategoryId"
            @bind-Value="_model.CategoryId"
            class="form-control">
            @foreach(var category in _categories)
            {
                <option 
                    value="@category.Id">
                    @category.Title
                </option>
            }
        </InputSelect>
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @_errorMessage
        </div>
    }

    <!--

    <form class="row g-3">
  <div class="col-md-4">
    <label for="validationServer01" class="form-label">First name</label>
    <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>
    <div class="valid-feedback">
      Looks good!
    </div>
  </div>
  <div class="col-md-4">
    <label for="validationServer02" class="form-label">Last name</label>
    <input type="text" class="form-control is-valid" id="validationServer02" value="Otto" required>
    <div class="valid-feedback">
      Looks good!
    </div>
  </div>
  <div class="col-md-4">
    <label for="validationServerUsername" class="form-label">Username</label>
    <div class="input-group has-validation">
      <span class="input-group-text" id="inputGroupPrepend3"></span>
      <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3 validationServerUsernameFeedback" required>
      <div id="validationServerUsernameFeedback" class="invalid-feedback">
        Please choose a username.
      </div>
    </div>
  </div>
  <div class="col-md-6">
    <label for="validationServer03" class="form-label">City</label>
    <input type="text" class="form-control is-invalid" id="validationServer03" aria-describedby="validationServer03Feedback" required>
    <div id="validationServer03Feedback" class="invalid-feedback">
      Please provide a valid city.
    </div>
  </div>
  <div class="col-md-3">
    <label for="validationServer04" class="form-label">State</label>
    <select class="form-select is-invalid" id="validationServer04" aria-describedby="validationServer04Feedback" required>
      <option selected disabled value="">Choose...</option>
      <option>...</option>
    </select>
    <div id="validationServer04Feedback" class="invalid-feedback">
      Please select a valid state.
    </div>
  </div>
  <div class="col-md-3">
    <label for="validationServer05" class="form-label">Zip</label>
    <input type="text" class="form-control is-invalid" id="validationServer05" aria-describedby="validationServer05Feedback" required>
    <div id="validationServer05Feedback" class="invalid-feedback">
      Please provide a valid zip.
    </div>
  </div>
  <div class="col-12">
    <div class="form-check">
      <input class="form-check-input is-invalid" type="checkbox" value="" id="invalidCheck3" aria-describedby="invalidCheck3Feedback" required>
      <label class="form-check-label" for="invalidCheck3">
        Agree to terms and conditions
      </label>
      <div id="invalidCheck3Feedback" class="invalid-feedback">
        You must agree before submitting.
      </div>
    </div>
  </div>
  <div class="col-12">
    <button class="btn btn-primary" type="submit">Submit form</button>
  </div>
</form>

    -->

    <button class="btn btn-sucess" type="submit">
        Save
    </button>

</EditForm>

@code{
    private Product _model = new();
    List<Category> _categories = new();
    string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        _categories = await _context
            .Categories
            .AsNoTracking()
            .ToListAsync();
        _model.CategoryId = _categories[0].Id;
    }

    async Task HandleSubmitAsync()
    {
        try
        {
            await _context.Products.AddAsync(_model);
            await _context.SaveChangesAsync();
            _navigateManager.NavigateTo("/products");
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }
}